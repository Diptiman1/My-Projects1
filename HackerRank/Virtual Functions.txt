#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class Person
{
protected:
	int curid;
	char name[100];
	int age;
	
public:
	virtual void getdata() { return; };
	virtual void putdata() { return; };
};

class Student:public Person
{

	static int cur_ids;
	
private:
	
	int marks[6];

	public:
	
	void getdata()
	{
		cur_ids++;
		
		cin >> name >> age;
		for (int i = 0; i < 6; i++)
			cin >> marks[i];

		curid = cur_ids;
	}
	void putdata()
	{
		int sum = 0;
		for (int i = 0; i < 6; i++)
			sum = sum + marks[i];

		cout << name << " " << age << " " << sum << " " << curid  << endl;

	}


};

int Student::cur_ids = 0;


class Professor:public Person
{
private:
	 
	int publication;
public:
	static int cur_idp;
	//int cur_id = 0;
	void getdata()
	{
		cur_idp++;
		cin.ignore();
		//getline(cin, name );
		cin >> name >> age >> publication;
		

		curid = cur_idp;
		
	}

	void putdata()
	{
		cout << name << " " << age << " " << publication << " " << curid  << endl;
	}



};

int Professor::cur_idp = 0;


int main() {

	int n, val;
	cin >> n; //The number of objects that is going to be created.

	Person *per[4];

	for (int i = 0; i < n; i++) {

		cin >> val;
		if (val == 1) {
			// If val is 1 current object is of type Professor
			per[i] = new Professor;

		}
		else per[i] = new Student; // Else the current object is of type Student

		per[i]->getdata(); // Get the data from the user.

	}

	for (int i = 0; i<n; i++)
		per[i]->putdata(); // Print the required output for each object.

	return 0;

}